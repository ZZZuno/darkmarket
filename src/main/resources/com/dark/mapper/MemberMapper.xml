<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dark.mapper.MemberMapper">


<!-- 공통된 sql구문작업 : 검색조건 -->
	<sql id="criteria">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type == 'N'.toString()">
                            DARK_ID like '%' || #{keyword} || '%'
						</when>
						<when test="type == 'C'.toString()">
                            DARK_NAME like '%' || #{keyword} || '%'
						</when>					
					</choose>
				</trim>
			</foreach>
		</trim>
	
	</sql>
	
<select id="idCheck" parameterType="String" resultType="String">
SELECT 
	dark_id
FROM
	dark_tbl
WHERE
	DARK_ID = #{dark_id}

</select>



<insert id="join" parameterType="com.dark.domain.MemberVO">
INSERT INTO DARK_TBL(DARK_ID, DARK_NAME, DARK_EMAIL, DARK_PASSWORD, DARK_ZIPCODE, DARK_ADDR, DARK_DEADDR, DARK_PHONE)
VALUES (#{dark_id}, #{dark_name}, #{dark_email}, #{dark_password}, #{dark_zipcode}, #{dark_addr}, #{dark_deaddr}, #{dark_phone})

</insert>

<select id="login" parameterType="String" resultType="com.dark.domain.MemberVO">

SELECT
	dark_id, 
	dark_name, 
	dark_email, 
	dark_password, 
	dark_zipcode, 
	dark_addr, 
	dark_deaddr, 
	dark_phone, 
	dark_point, 
	dark_lastlogin, 
	dark_datesub, 
	dark_updatedate
FROM
	DARK_TBL
WHERE
	DARK_ID = #{dark_id}

</select>

<update id="loginTimeUpdate" parameterType="String">

UPDATE
	DARK_TBL
SET
	DARK_LASTLOGIN = sysdate
WHERE
	DARK_ID = #{mbsp_id}

</update>

<update id="modify" parameterType="com.dark.domain.MemberVO">

		UPDATE 
			DARK_TBL
    	SET 
    		DARK_EMAIL = #{dark_email}, 
    		DARK_ZIPCODE = #{dark_zipcode}, 
    		DARK_ADDR = #{dark_addr}, 
    		DARK_DEADDR = #{dark_deaddr}, 
    		DARK_PHONE = #{dark_phone},
    		DARK_UPDATEDATE = sysdate
    		
		WHERE 
			DARK_ID = #{dark_id}
</update>

<delete id="delete" parameterType="String">

DELETE FROM
	DARK_TBL
WHERE
	DARK_ID = #{dark_id}

</delete>

<select id="idFind" parameterType="String" resultType="com.dark.domain.MemberVO">

SELECT 
	DARK_ID, DARK_PASSWORD, DARK_EMAIL
FROM 
	DARK_TBL
WHERE
	DARK_NAME = #{dark_name}

</select>

<update id="updatePassword" parameterType="map">

UPDATE 
	DARK_TBL
SET
	DARK_PASSWORD = #{encryptedPassword}
WHERE
	DARK_ID = #{id}


</update>



<!--  CDATA 섹션 -->
	<select id="member_list" resultType="com.dark.domain.MemberVO" parameterType="com.dark.dto.Criteria">
		<![CDATA[
		select 
    		DARK_ID, DARK_NAME, DARK_EMAIL, DARK_ADDR, DARK_DEADDR, DARK_PHONE, DARK_LASTLOGIN, DARK_UPDATEDATE
		from 
		    (
		    select /*+INDEX_DESC(DARK_TBL DARK_TBL_PK) */
		        rownum rn, DARK_ID, DARK_NAME, DARK_EMAIL, DARK_ADDR, DARK_DEADDR, DARK_PHONE, DARK_LASTLOGIN, DARK_UPDATEDATE
		    from 
		        DARK_TBL
		    where 
		    ]]>
		    
		    <include refid="criteria"></include>
		    
		    <![CDATA[
		        rownum <= #{pageNum} * #{amount}
		    )
		where 
		    rn > (#{pageNum} -1) * #{amount}
		]]>
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from DARK_TBL where
		
		<include refid="criteria"></include>
		dark_id is not null
		
	</select>
	

</mapper>